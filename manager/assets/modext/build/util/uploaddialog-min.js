Ext.namespace("Ext.ux.Utils");Ext.ux.Utils.EventQueue=function(B,A){if(!B){throw"Handler is required.";}this.handler=B;this.scope=A||window;this.queue=[];this.is_processing=false;this.postEvent=function(C,D){D=D||null;this.queue.push({event:C,data:D});if(!this.is_processing){this.process();}};this.flushEventQueue=function(){this.queue=[];},this.process=function(){while(this.queue.length>0){this.is_processing=true;var C=this.queue.shift();this.handler.call(this.scope,C.event,C.data);}this.is_processing=false;};};Ext.ux.Utils.FSA=function(C,B,A){this.current_state=C;this.trans_table=B||{};this.trans_table_scope=A||window;Ext.ux.Utils.FSA.superclass.constructor.call(this,this.processEvent,this);};Ext.extend(Ext.ux.Utils.FSA,Ext.ux.Utils.EventQueue,{current_state:null,trans_table:null,trans_table_scope:null,state:function(){return this.current_state;},processEvent:function(A,D){var H=this.currentStateEventTransitions(A);if(!H){throw"State '"+this.current_state+"' has no transition for event '"+A+"'.";}for(var E=0,F=H.length;E<F;E++){var G=H[E];var I=G.predicate||G.p||true;var C=G.action||G.a||Ext.emptyFn;var B=G.state||G.s||this.current_state;var J=G.scope||this.trans_table_scope;if(this.computePredicate(I,J,D,A)){this.callAction(C,J,D,A);this.current_state=B;return ;}}throw"State '"+this.current_state+"' has no transition for event '"+A+"' in current context";},currentStateEventTransitions:function(A){return this.trans_table[this.current_state]?this.trans_table[this.current_state][A]||false:false;},computePredicate:function(C,E,G,F){var B=false;switch(Ext.type(C)){case"function":B=C.call(E,G,F,this);break;case"array":B=true;for(var D=0,A=C.length;B&&(D<A);D++){if(Ext.type(C[D])=="function"){B=C[D].call(E,G,F,this);}else{throw ["Predicate: ",C[D],' is not callable in "',this.current_state,'" state for event "',F].join("");}}break;case"boolean":B=C;break;default:throw ["Predicate: ",C,' is not callable in "',this.current_state,'" state for event "',F].join("");}return B;},callAction:function(F,C,E,D){switch(Ext.type(F)){case"array":for(var B=0,A=F.length;B<A;B++){if(Ext.type(F[B])=="function"){F[B].call(C,E,D,this);}else{throw ["Action: ",F[B],' is not callable in "',this.current_state,'" state for event "',D].join("");}}break;case"function":F.call(C,E,D,this);break;default:throw ["Action: ",F,' is not callable in "',this.current_state,'" state for event "',D].join("");}}});Ext.namespace("Ext.ux.UploadDialog");Ext.ux.UploadDialog.BrowseButton=Ext.extend(Ext.Button,{input_name:"file",input_file:null,original_handler:null,original_scope:null,initComponent:function(){Ext.ux.UploadDialog.BrowseButton.superclass.initComponent.call(this);this.original_handler=this.handler||null;this.original_scope=this.scope||window;this.handler=null;this.scope=null;},onRender:function(B,A){Ext.ux.UploadDialog.BrowseButton.superclass.onRender.call(this,B,A);this.createInputFile();},createInputFile:function(){var C=this.el.child("tbody");C.position("relative");this.wrap=this.el.wrap({cls:"tbody"});this.input_file=this.wrap.createChild({tag:"input",type:"file",size:1,name:this.input_name||Ext.id(this.el),style:"position: absolute; display: block; border: none; cursor: pointer"});this.input_file.setOpacity(0);var B=C.getBox();this.input_file.setStyle("font-size",(B.width*0.5)+"px");var D=this.input_file.getBox();var A={x:3,y:3};if(Ext.isIE){A={x:0,y:3};}this.input_file.setLeft(B.width-D.width+A.x+"px");this.input_file.setTop(B.height-D.height+A.y+"px");this.input_file.setOpacity(0);if(this.handleMouseEvents){this.input_file.on("mouseover",this.onMouseOver,this);this.input_file.on("mousedown",this.onMouseDown,this);}if(this.tooltip){if(typeof this.tooltip=="object"){Ext.QuickTips.register(Ext.apply({target:this.input_file},this.tooltip));}else{this.input_file.dom[this.tooltipType]=this.tooltip;}}this.input_file.on("change",this.onInputFileChange,this);this.input_file.on("click",function(E){E.stopPropagation();});},detachInputFile:function(B){var A=this.input_file;B=B||false;if(typeof this.tooltip=="object"){Ext.QuickTips.unregister(this.input_file);}else{this.input_file.dom[this.tooltipType]=null;}this.input_file.removeAllListeners();this.input_file=null;if(!B){this.createInputFile();}return A;},getInputFile:function(){return this.input_file;},disable:function(){Ext.ux.UploadDialog.BrowseButton.superclass.disable.call(this);this.input_file.dom.disabled=true;},enable:function(){Ext.ux.UploadDialog.BrowseButton.superclass.enable.call(this);this.input_file.dom.disabled=false;},destroy:function(){var A=this.detachInputFile(true);A.remove();A=null;Ext.ux.UploadDialog.BrowseButton.superclass.destroy.call(this);},onInputFileChange:function(){if(this.original_handler){this.original_handler.call(this.original_scope,this);}}});Ext.ux.UploadDialog.TBBrowseButton=Ext.extend(Ext.ux.UploadDialog.BrowseButton,{hideParent:true,onDestroy:function(){Ext.ux.UploadDialog.TBBrowseButton.superclass.onDestroy.call(this);if(this.container){this.container.remove();}}});Ext.ux.UploadDialog.FileRecord=Ext.data.Record.create([{name:"filename"},{name:"state",type:"int"},{name:"note"},{name:"input_element"}]);Ext.ux.UploadDialog.FileRecord.STATE_QUEUE=0;Ext.ux.UploadDialog.FileRecord.STATE_FINISHED=1;Ext.ux.UploadDialog.FileRecord.STATE_FAILED=2;Ext.ux.UploadDialog.FileRecord.STATE_PROCESSING=3;Ext.ux.UploadDialog.Dialog=function(A){var B={border:false,width:450,height:350,minWidth:450,minHeight:350,plain:true,constrainHeader:true,draggable:true,closable:true,maximizable:false,minimizable:false,resizable:true,layout:"fit",region:"center",autoDestroy:true,closeAction:"hide",title:this.i18n.title,cls:"ext-ux-uploaddialog-dialog",url:"",base_params:{},permitted_extensions:[],reset_on_hide:true,allow_close_on_upload:false,upload_autostart:false,Make_Reload:false,post_var_name:"file"};A=Ext.applyIf(A||{},B);A.layout="absolute";Ext.ux.UploadDialog.Dialog.superclass.constructor.call(this,A);};Ext.extend(Ext.ux.UploadDialog.Dialog,Ext.Window,{fsa:null,state_tpl:null,form:null,grid_panel:null,progress_bar:null,is_uploading:false,initial_queued_count:0,upload_frame:null,initComponent:function(){Ext.ux.UploadDialog.Dialog.superclass.initComponent.call(this);var A={created:{"window-render":[{action:[this.createForm,this.createProgressBar,this.createGrid],state:"rendering"}],destroy:[{action:this.flushEventQueue,state:"destroyed"}]},rendering:{"grid-render":[{action:[this.fillToolbar,this.updateToolbar],state:"ready"}],destroy:[{action:this.flushEventQueue,state:"destroyed"}]},ready:{"file-selected":[{predicate:[this.fireFileTestEvent,this.isPermittedFile],action:this.addFileToUploadQueue,state:"adding-file"},{}],"grid-selection-change":[{action:this.updateToolbar}],"remove-files":[{action:[this.removeFiles,this.fireFileRemoveEvent]}],"reset-queue":[{action:[this.resetQueue,this.fireResetQueueEvent]}],"start-upload":[{predicate:this.hasUnuploadedFiles,action:[this.setUploadingFlag,this.saveInitialQueuedCount,this.updateToolbar,this.updateProgressBar,this.prepareNextUploadTask,this.fireUploadStartEvent],state:"uploading"},{}],"stop-upload":[{}],hide:[{predicate:[this.isNotEmptyQueue,this.getResetOnHide],action:[this.resetQueue,this.fireResetQueueEvent]},{}],destroy:[{action:this.flushEventQueue,state:"destroyed"}]},"adding-file":{"file-added":[{predicate:this.isUploading,action:[this.incInitialQueuedCount,this.updateProgressBar,this.fireFileAddEvent],state:"uploading"},{predicate:this.getUploadAutostart,action:[this.startUpload,this.fireFileAddEvent],state:"ready"},{action:[this.updateToolbar,this.fireFileAddEvent],state:"ready"}]},uploading:{"file-selected":[{predicate:[this.fireFileTestEvent,this.isPermittedFile],action:this.addFileToUploadQueue,state:"adding-file"},{}],"grid-selection-change":[{}],"start-upload":[{}],"stop-upload":[{predicate:this.hasUnuploadedFiles,action:[this.resetUploadingFlag,this.abortUpload,this.updateToolbar,this.updateProgressBar,this.fireUploadStopEvent],state:"ready"},{action:[this.resetUploadingFlag,this.abortUpload,this.updateToolbar,this.updateProgressBar,this.fireUploadStopEvent,this.fireUploadCompleteEvent],state:"ready"}],"file-upload-start":[{action:[this.uploadFile,this.findUploadFrame,this.fireFileUploadStartEvent]}],"file-upload-success":[{predicate:this.hasUnuploadedFiles,action:[this.resetUploadFrame,this.updateRecordState,this.updateProgressBar,this.prepareNextUploadTask,this.fireUploadSuccessEvent]},{action:[this.resetUploadFrame,this.resetUploadingFlag,this.updateRecordState,this.updateToolbar,this.updateProgressBar,this.fireUploadSuccessEvent,this.fireUploadCompleteEvent],state:"ready"}],"file-upload-error":[{predicate:this.hasUnuploadedFiles,action:[this.resetUploadFrame,this.updateRecordState,this.updateProgressBar,this.prepareNextUploadTask,this.fireUploadErrorEvent]},{action:[this.resetUploadFrame,this.resetUploadingFlag,this.updateRecordState,this.updateToolbar,this.updateProgressBar,this.fireUploadErrorEvent,this.fireUploadCompleteEvent],state:"ready"}],"file-upload-failed":[{predicate:this.hasUnuploadedFiles,action:[this.resetUploadFrame,this.updateRecordState,this.updateProgressBar,this.prepareNextUploadTask,this.fireUploadFailedEvent]},{action:[this.resetUploadFrame,this.resetUploadingFlag,this.updateRecordState,this.updateToolbar,this.updateProgressBar,this.fireUploadFailedEvent,this.fireUploadCompleteEvent],state:"ready"}],hide:[{predicate:this.getResetOnHide,action:[this.stopUpload,this.repostHide]},{}],destroy:[{predicate:this.hasUnuploadedFiles,action:[this.resetUploadingFlag,this.abortUpload,this.fireUploadStopEvent,this.flushEventQueue],state:"destroyed"},{action:[this.resetUploadingFlag,this.abortUpload,this.fireUploadStopEvent,this.fireUploadCompleteEvent,this.flushEventQueue],state:"destroyed"}]},destroyed:{}};this.fsa=new Ext.ux.Utils.FSA("created",A,this);this.addEvents({filetest:true,fileadd:true,fileremove:true,resetqueue:true,uploadsuccess:true,uploaderror:true,uploadfailed:true,uploadstart:true,uploadstop:true,uploadcomplete:true,fileuploadstart:true});this.on("render",this.onWindowRender,this);this.on("beforehide",this.onWindowBeforeHide,this);this.on("hide",this.onWindowHide,this);this.on("destroy",this.onWindowDestroy,this);this.state_tpl=new Ext.Template("<div class='ext-ux-uploaddialog-state ext-ux-uploaddialog-state-{state}'> </div>").compile();},createForm:function(){this.form=Ext.DomHelper.append(this.body,{tag:"form",method:"post",action:this.url,style:"position: absolute; left: -100px; top: -100px; width: 100px; height: 100px; clear: both;"});},createProgressBar:function(){this.progress_bar=this.add(new Ext.ProgressBar({x:0,y:0,anchor:"0",value:0,text:this.i18n.progress_waiting_text}));},createGrid:function(){var B=new Ext.data.Store({proxy:new Ext.data.MemoryProxy([]),reader:new Ext.data.JsonReader({},Ext.ux.UploadDialog.FileRecord),sortInfo:{field:"state",direction:"DESC"},pruneModifiedRecords:true});var A=new Ext.grid.ColumnModel([{header:this.i18n.state_col_title,width:this.i18n.state_col_width,resizable:false,dataIndex:"state",sortable:true,renderer:this.renderStateCell.createDelegate(this)},{header:this.i18n.filename_col_title,width:this.i18n.filename_col_width,dataIndex:"filename",sortable:true,renderer:this.renderFilenameCell.createDelegate(this)},{header:this.i18n.note_col_title,width:this.i18n.note_col_width,dataIndex:"note",sortable:true,renderer:this.renderNoteCell.createDelegate(this)}]);this.grid_panel=new Ext.grid.GridPanel({ds:B,cm:A,layout:"fit",height:this.height-100,region:"center",x:0,y:22,border:true,viewConfig:{autoFill:true,forceFit:true},bbar:new Ext.Toolbar()});this.grid_panel.on("render",this.onGridRender,this);this.add(this.grid_panel);this.grid_panel.getSelectionModel().on("selectionchange",this.onGridSelectionChange,this);},fillToolbar:function(){var A=this.grid_panel.getBottomToolbar();A.x_buttons={};A.x_buttons.add=A.addItem(new Ext.ux.UploadDialog.TBBrowseButton({input_name:this.post_var_name,text:this.i18n.add_btn_text,tooltip:this.i18n.add_btn_tip,iconCls:"ext-ux-uploaddialog-addbtn",handler:this.onAddButtonFileSelected,scope:this}));A.x_buttons.remove=A.addButton({text:this.i18n.remove_btn_text,tooltip:this.i18n.remove_btn_tip,iconCls:"ext-ux-uploaddialog-removebtn",handler:this.onRemoveButtonClick,scope:this});A.x_buttons.reset=A.addButton({text:this.i18n.reset_btn_text,tooltip:this.i18n.reset_btn_tip,iconCls:"ext-ux-uploaddialog-resetbtn",handler:this.onResetButtonClick,scope:this});A.add("-");A.x_buttons.upload=A.addButton({text:this.i18n.upload_btn_start_text,tooltip:this.i18n.upload_btn_start_tip,iconCls:"ext-ux-uploaddialog-uploadstartbtn",handler:this.onUploadButtonClick,scope:this});A.add("-");A.x_buttons.close=A.addButton({text:this.i18n.close_btn_text,tooltip:this.i18n.close_btn_tip,handler:this.onCloseButtonClick,scope:this});},renderStateCell:function(F,A,B,D,E,C){return this.state_tpl.apply({state:F});},renderFilenameCell:function(H,A,C,E,G,D){var B=this.grid_panel.getView();var F=function(){try{Ext.fly(B.getCell(E,G)).child(".x-grid3-cell-inner").dom.qtip=H;}catch(I){}};F.defer(1000);return H;},renderNoteCell:function(H,A,C,E,G,D){var B=this.grid_panel.getView();var F=function(){try{Ext.fly(B.getCell(E,G)).child(".x-grid3-cell-inner").dom.qtip=H;}catch(I){}};F.defer(1000);return H;},getFileExtension:function(B){var A=null;var C=B.split(".");if(C.length>1){A=C.pop();}return A;},isPermittedFileType:function(B){var A=true;if(this.permitted_extensions.length>0){A=this.permitted_extensions.indexOf(this.getFileExtension(B))!=-1;}return A;},isPermittedFile:function(C){var A=false;var B=C.getInputFile().dom.value;if(this.isPermittedFileType(B)){A=true;}else{Ext.Msg.alert(this.i18n.error_msgbox_title,String.format(this.i18n.err_file_type_not_permitted,B,this.permitted_extensions.join(this.i18n.permitted_extensions_join_str)));A=false;}return A;},fireFileTestEvent:function(A){return this.fireEvent("filetest",this,A.getInputFile().dom.value)!==false;},addFileToUploadQueue:function(C){var A=C.detachInputFile();A.appendTo(this.form);A.setStyle("width","100px");A.dom.disabled=true;var B=this.grid_panel.getStore();B.add(new Ext.ux.UploadDialog.FileRecord({state:Ext.ux.UploadDialog.FileRecord.STATE_QUEUE,filename:A.dom.value,note:this.i18n.note_queued_to_upload,input_element:A}));this.fsa.postEvent("file-added",A.dom.value);},fireFileAddEvent:function(A){this.fireEvent("fileadd",this,A);},updateProgressBar:function(){if(this.is_uploading){var B=this.getQueuedCount(true);var A=1-B/this.initial_queued_count;this.progress_bar.updateProgress(A,String.format(this.i18n.progress_uploading_text,this.initial_queued_count-B,this.initial_queued_count));}else{this.progress_bar.updateProgress(0,this.i18n.progress_waiting_text);}},updateToolbar:function(){var A=this.grid_panel.getBottomToolbar();if(this.is_uploading){A.x_buttons.remove.disable();A.x_buttons.reset.disable();A.x_buttons.upload.enable();if(!this.getAllowCloseOnUpload()){A.x_buttons.close.disable();}A.x_buttons.upload.setIconClass("ext-ux-uploaddialog-uploadstopbtn");A.x_buttons.upload.setText(this.i18n.upload_btn_stop_text);A.x_buttons.upload.getEl().child(A.x_buttons.upload.buttonSelector).dom[A.x_buttons.upload.tooltipType]=this.i18n.upload_btn_stop_tip;}else{A.x_buttons.remove.enable();A.x_buttons.reset.enable();A.x_buttons.close.enable();A.x_buttons.upload.setIconClass("ext-ux-uploaddialog-uploadstartbtn");A.x_buttons.upload.setText(this.i18n.upload_btn_start_text);if(this.getQueuedCount()>0){A.x_buttons.upload.enable();}else{A.x_buttons.upload.disable();}if(this.grid_panel.getSelectionModel().hasSelection()){A.x_buttons.remove.enable();}else{A.x_buttons.remove.disable();}if(this.grid_panel.getStore().getCount()>0){A.x_buttons.reset.enable();}else{A.x_buttons.reset.disable();}}},saveInitialQueuedCount:function(){this.initial_queued_count=this.getQueuedCount();},incInitialQueuedCount:function(){this.initial_queued_count++;},setUploadingFlag:function(){this.is_uploading=true;},resetUploadingFlag:function(){this.is_uploading=false;},prepareNextUploadTask:function(){var B=this.grid_panel.getStore();var A=null;B.each(function(C){if(!A&&C.get("state")==Ext.ux.UploadDialog.FileRecord.STATE_QUEUE){A=C;}else{C.get("input_element").dom.disabled=true;}});A.get("input_element").dom.disabled=false;A.set("state",Ext.ux.UploadDialog.FileRecord.STATE_PROCESSING);A.set("note",this.i18n.note_processing);A.commit();this.fsa.postEvent("file-upload-start",A);},fireUploadStartEvent:function(){this.fireEvent("uploadstart",this);},removeFiles:function(E){var B=this.grid_panel.getStore();for(var C=0,A=E.length;C<A;C++){var D=E[C];D.get("input_element").remove();B.remove(D);}},fireFileRemoveEvent:function(C){for(var B=0,A=C.length;B<A;B++){this.fireEvent("fileremove",this,C[B].get("filename"));}},resetQueue:function(){var A=this.grid_panel.getStore();A.each(function(B){B.get("input_element").remove();});A.removeAll();},fireResetQueueEvent:function(){this.fireEvent("resetqueue",this);},uploadFile:function(A){Ext.Ajax.request({url:this.url,params:this.base_params||this.baseParams||this.params,method:"POST",form:this.form,isUpload:true,success:this.onAjaxSuccess,failure:this.onAjaxFailure,scope:this,record:A});},fireFileUploadStartEvent:function(A){this.fireEvent("fileuploadstart",this,A.get("filename"));},updateRecordState:function(A){if("success" in A.response&&A.response.success){A.record.set("state",Ext.ux.UploadDialog.FileRecord.STATE_FINISHED);A.record.set("note",A.response.message||A.response.error||this.i18n.note_upload_success);}else{A.record.set("state",Ext.ux.UploadDialog.FileRecord.STATE_FAILED);A.record.set("note",A.response.message||A.response.error||this.i18n.note_upload_error);}A.record.commit();},fireUploadSuccessEvent:function(A){this.fireEvent("uploadsuccess",this,A.record.get("filename"),A.response);},fireUploadErrorEvent:function(A){this.fireEvent("uploaderror",this,A.record.get("filename"),A.response);},fireUploadFailedEvent:function(A){this.fireEvent("uploadfailed",this,A.record.get("filename"));},fireUploadCompleteEvent:function(){this.fireEvent("uploadcomplete",this);},findUploadFrame:function(){this.upload_frame=Ext.getBody().child("iframe.x-hidden:last");},resetUploadFrame:function(){this.upload_frame=null;},removeUploadFrame:function(){if(this.upload_frame){this.upload_frame.removeAllListeners();this.upload_frame.dom.src="about:blank";this.upload_frame.remove();}this.upload_frame=null;},abortUpload:function(){this.removeUploadFrame();var B=this.grid_panel.getStore();var A=null;B.each(function(C){if(C.get("state")==Ext.ux.UploadDialog.FileRecord.STATE_PROCESSING){A=C;return false;}});A.set("state",Ext.ux.UploadDialog.FileRecord.STATE_FAILED);A.set("note",this.i18n.note_aborted);A.commit();},fireUploadStopEvent:function(){this.fireEvent("uploadstop",this);},repostHide:function(){this.fsa.postEvent("hide");},flushEventQueue:function(){this.fsa.flushEventQueue();},onWindowRender:function(){this.fsa.postEvent("window-render");},onWindowBeforeHide:function(){return this.isUploading()?this.getAllowCloseOnUpload():true;},onWindowHide:function(){this.fsa.postEvent("hide");},onWindowDestroy:function(){this.fsa.postEvent("destroy");},onGridRender:function(){this.fsa.postEvent("grid-render");},onGridSelectionChange:function(){this.fsa.postEvent("grid-selection-change");},onAddButtonFileSelected:function(A){this.fsa.postEvent("file-selected",A);},onUploadButtonClick:function(){if(this.is_uploading){this.fsa.postEvent("stop-upload");}else{this.fsa.postEvent("start-upload");}},onRemoveButtonClick:function(){var A=this.grid_panel.getSelectionModel().getSelections();this.fsa.postEvent("remove-files",A);},onResetButtonClick:function(){this.fsa.postEvent("reset-queue");},onCloseButtonClick:function(){this[this.closeAction].call(this);if(this.Make_Reload==true){document.location.reload();}},onAjaxSuccess:function(C,D){var A={success:false,error:this.i18n.note_upload_error};try{var B=C.responseText;var E=B.match(/^<pre>((?:.|\n)*)<\/pre>$/i);if(E){B=E[1];}A=Ext.util.JSON.decode(B);}catch(G){}var F={record:D.record,response:A};if("success" in A&&A.success){this.fsa.postEvent("file-upload-success",F);}else{this.fsa.postEvent("file-upload-error",F);}},onAjaxFailure:function(A,B){var C={record:B.record,response:{success:false,error:this.i18n.note_upload_failed}};this.fsa.postEvent("file-upload-failed",C);},startUpload:function(){this.fsa.postEvent("start-upload");},stopUpload:function(){this.fsa.postEvent("stop-upload");},getUrl:function(){return this.url;},setUrl:function(A){this.url=A;},getBaseParams:function(){return this.base_params;},setBaseParams:function(A){this.base_params=A;},getUploadAutostart:function(){return this.upload_autostart;},setUploadAutostart:function(A){this.upload_autostart=A;},getMakeReload:function(){return this.Make_Reload;},setMakeReload:function(A){this.Make_Reload=A;},getAllowCloseOnUpload:function(){return this.allow_close_on_upload;},setAllowCloseOnUpload:function(A){this.allow_close_on_upload;},getResetOnHide:function(){return this.reset_on_hide;},setResetOnHide:function(A){this.reset_on_hide=A;},getPermittedExtensions:function(){return this.permitted_extensions;},setPermittedExtensions:function(A){this.permitted_extensions=A;},isUploading:function(){return this.is_uploading;},isNotEmptyQueue:function(){return this.grid_panel.getStore().getCount()>0;},getQueuedCount:function(B){var C=0;var A=this.grid_panel.getStore();A.each(function(D){if(D.get("state")==Ext.ux.UploadDialog.FileRecord.STATE_QUEUE){C++;}if(B&&D.get("state")==Ext.ux.UploadDialog.FileRecord.STATE_PROCESSING){C++;}});return C;},hasUnuploadedFiles:function(){return this.getQueuedCount()>0;}});var p=Ext.ux.UploadDialog.Dialog.prototype;p.i18n={title:_("upload_files"),state_col_title:_("upf_state"),state_col_width:70,filename_col_title:_("upf_filename"),filename_col_width:230,note_col_title:_("upf_note"),note_col_width:150,add_btn_text:_("upf_add"),add_btn_tip:_("upf_add_desc"),remove_btn_text:_("upf_remove"),remove_btn_tip:_("upf_remove_desc"),reset_btn_text:_("upf_reset"),reset_btn_tip:_("upf_reset_desc"),upload_btn_start_text:_("upf_upload"),upload_btn_start_tip:_("upf_upload_desc"),upload_btn_stop_text:_("upf_abort"),upload_btn_stop_tip:_("upf_abort_desc"),close_btn_text:_("upf_close"),close_btn_tip:_("upf_close_desc"),progress_waiting_text:_("upf_progress_wait"),progress_uploading_text:_("upf_uploading_desc"),error_msgbox_title:_("upf_error"),permitted_extensions_join_str:",",err_file_type_not_permitted:_("upf_err_filetype"),note_queued_to_upload:_("upf_queued"),note_processing:_("upf_uploading"),note_upload_failed:_("upf_err_failed"),note_upload_success:_("upf_success"),note_upload_error:_("upf_upload_err"),note_aborted:_("upf_aborted")};