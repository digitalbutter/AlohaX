MODx.tree.CheckboxTree=function(B){B=B||{};Ext.applyIf(B,{rootVisible:false,autoScroll:true,autoHeight:true,cls:"modx-tree"});var A=this.getToolbar();if(B.tbar&&B.useDefaultToolbar){A.push("-");for(var C=0;C<B.tbar.length;C=C+1){A.push(B.tbar[C]);}}else{if(B.tbar){A=B.tbar;}}Ext.apply(B,{tbar:A});this.config=B;this.setup();};Ext.extend(MODx.tree.CheckboxTree,Ext.tree.TreePanel,{menu:{},root:null,setup:function(){var A;if(this.config.url){this.config.loader=new Ext.tree.TreeLoader({preloadChildren:false,baseAttrs:{uiProvider:MODx.tree.CheckboxNodeUI},dataUrl:this.config.url});A=new Ext.tree.AsyncTreeNode({text:this.config.rootName||"",draggable:false,id:this.config.rootId||"root"});}else{this.config.loader=new Ext.tree.TreeLoader({preloadChildren:true,baseAttrs:{uiProvider:MODx.tree.CheckboxNodeUI}});A=new Ext.tree.TreeNode({text:this.config.rootName||"",draggable:false,id:this.config.rootId||"root",children:this.config.data||[]});}MODx.tree.CheckboxTree.superclass.constructor.call(this,this.config);this.addEvents({refresh:true});this.getLoader().doPreload(A);this.setRootNode(A);this.cm=new Ext.menu.Menu(Ext.id(),{});this.on("contextmenu",this._showContextMenu,this);this.treestateId=Ext.id();this.on("click",function(B){Ext.state.Manager.set(this.treestateId,B.getPath());},this);},encode:function(B){if(!B){B=this.getRootNode();}var C=function(G){var D={};var E=G.childNodes;for(var F=0;F<E.length;F=F+1){var H=E[F];D[H.id]={id:H.id,checked:H.ui.isChecked(),type:H.attributes.type||"",data:H.attributes.data||{},children:C(H)};}return D;};var A=C(B);return Ext.encode(A);},_showContextMenu:function(B,C){B.select();this.cm.activeNode=B;var A=B.id.split("_");this.cm.removeAll();if(B.attributes.menu&&B.attributes.menu.items){this.addContextMenuItem(B.attributes.menu.items);this.cm.show(B.ui.getEl(),"t?");}},addContextMenuItem:function(C){var B=C,A=B.length;for(var D=0;D<A;D++){B[D].scope=this;this.cm.add(B[D]);}},removeChildren:function(A){while(A.firstChild){var B=A.firstChild;A.removeChild(B);B.destroy();}},loadRemoteData:function(A){this.removeChildren(this.getRootNode());for(var B in A){if(typeof A[B]==="object"){this.getRootNode().appendChild(A[B]);}}},removeNode:function(B){var A=this.getNodeById(B);if(A){A.remove();}},removeActiveNode:function(){this.cm.activeNode.remove();},refresh:function(){var B=Ext.state.Manager.get(this.treestateId);var A=this.getRootNode();if(this.config.url){A.reload();}if(B===undefined){this.root.expand(null,null);}else{this.expandPath(B,null);}this.fireEvent("refresh",{root:this.getRootNode()});return true;},expand:function(){if(this.root){this.root.expand();this.root.expandChildNodes();}},collapse:function(){if(this.root){this.root.collapseChildNodes();this.root.collapse();}},getToolbar:function(){var A=MODx.config.template_url+"images/restyle/icons/";return[{icon:A+"arrow_down.png",cls:"x-btn-icon",scope:this,tooltip:{text:_("tree_expand")},handler:this.expand},{icon:A+"arrow_up.png",cls:"x-btn-icon",scope:this,tooltip:{text:_("tree_collapse")},handler:this.collapse},"-",{icon:A+"refresh.png",cls:"x-btn-icon",scope:this,tooltip:{text:_("tree_refresh")},handler:this.refresh}];}});Ext.reg("tree-checkbox",MODx.tree.CheckboxTree);MODx.tree.CheckboxNodeUI=Ext.extend(Ext.tree.TreeNodeUI,{onCheckChange:function(){MODx.tree.CheckboxNodeUI.superclass.onCheckChange.apply(this,arguments);var A;if((A=this.node.parentNode)&&A.getUI().updateParent){A.getUI().updateParent();}},toggleCheck:function(){var A=MODx.tree.CheckboxNodeUI.superclass.toggleCheck.apply(this,arguments);this.updateChild(A);return A;},renderElements:function(D,B,A,C){MODx.tree.CheckboxNodeUI.superclass.renderElements.apply(this,arguments);this.updateChild(this.node.attributes.checked);},updateParent:function(){var A;this.node.eachChild(function(B){if(A===undefined){A=B.attributes.checked;}else{if(A!==B.attributes.checked){A=this.grayedValue;return false;}}},this);this.toggleCheck(A);},updateChild:function(A){if(this.checkbox&&false){if(A===true){Ext.fly(this.ctNode).replaceClass("x-tree-branch-unchecked","x-tree-branch-checked");}else{if(A===false){Ext.fly(this.ctNode).replaceClass("x-tree-branch-checked","x-tree-branch-unchecked");}else{Ext.fly(this.ctNode).removeClass(["x-tree-branch-checked","x-tree-branch-unchecked"]);}}}}});Ext.override(Ext.tree.TreeNodeUI,{grayedValue:null,onDisableChange:function(B,A){this.disabled=A;this[A?"addClass":"removeClass"]("x-tree-node-disabled");},initEvents:function(){this.node.on("move",this.onMove,this);this.addClass("x-tree-checkboxnode");if(this.node.disabled){this.addClass("x-tree-node-disabled");}if(this.node.hidden){this.hide();}var B=this.node.getOwnerTree();var A=B.enableDD||B.enableDrag||B.enableDrop;if(A&&(!this.node.isRoot||B.rootVisible)){Ext.dd.Registry.register(this.elNode,{node:this.node,handles:this.getDDHandles(),isHandle:false});}},onDblClick:function(A){A.preventDefault();if(this.disabled){return ;}if(!this.animating&&this.node.isExpandable()){this.node.toggle();}this.fireEvent("dblclick",this.node,A);},onCheckChange:function(){var A=this.isChecked();this.node.attributes.checked=A;this.fireEvent("checkchange",this.node,A);},toggleCheck:function(B){var A=this.checkbox;if(!A){return false;}if(B===undefined){B=this.isChecked()===false;}if(B===true){Ext.fly(A).replaceClass("x-tree-node-grayed","x-tree-node-checked");}else{if(B!==false){Ext.fly(A).replaceClass("x-tree-node-checked","x-tree-node-grayed");}else{Ext.fly(A).removeClass(["x-tree-node-checked","x-tree-node-grayed"]);}}this.onCheckChange();return B;},onCheckboxClick:function(){if(!this.disabled){this.toggleCheck();}},onCheckboxOver:function(){this.addClass("x-tree-checkbox-over");},onCheckboxOut:function(){this.removeClass("x-tree-checkbox-over");},onCheckboxDown:function(){this.addClass("x-tree-checkbox-down");},onCheckboxUp:function(){this.removeClass("x-tree-checkbox-down");},renderElements:function(A,K,J,I){this.indentMarkup=A.parentNode?A.parentNode.ui.getChildIndent():"";var G=K.checked!==undefined;var F=K.href?K.href:Ext.isGecko?"":"#";var E=['<li class="x-tree-node"><div ext:tree-node-id="',A.id,'" class="x-tree-node-el x-tree-node-leaf x-unselectable ',K.cls,'" unselectable="on">','<span class="x-tree-node-indent">',this.indentMarkup,"</span>",'<img src="',this.emptyIcon,'" class="x-tree-ec-icon x-tree-elbow" />','<img src="',K.icon||this.emptyIcon,'" class="x-tree-node-icon',(K.icon?" x-tree-node-inline-icon":""),(K.iconCls?" "+K.iconCls:""),'" unselectable="on" />',G?('<img src="'+this.emptyIcon+'" class="x-tree-checkbox'+(K.checked===true?" x-tree-node-checked":(K.checked!==false?" x-tree-node-grayed":""))+'" />'):"",'<a hidefocus="on" class="x-tree-node-anchor" href="',F,'" tabIndex="1" ',(K.hrefTarget?' target="'+K.hrefTarget+'"':""),">",'<span unselectable="on">',A.text,"</span>","</a>",'</div><ul class="x-tree-node-ct" style="display:none;"></ul>',"</li>"].join("");var D;if(I!==true&&A.nextSibling&&(D=A.nextSibling.ui.getEl())){this.wrap=Ext.DomHelper.insertHtml("beforeBegin",D,E);}else{this.wrap=Ext.DomHelper.insertHtml("beforeEnd",J,E);}this.elNode=this.wrap.childNodes[0];this.ctNode=this.wrap.childNodes[1];var C=this.elNode.childNodes;this.indentNode=C[0];this.ecNode=C[1];this.iconNode=C[2];var B=3;if(G){this.checkbox=C[3];B=B+1;}this.anchor=C[B];this.textNode=C[B].firstChild;var H;if(K.description&&this.textNode){H=new Ext.ToolTip({target:this.textNode,html:K.description});}},isChecked:function(){return this.checkbox?(Ext.fly(this.checkbox).hasClass("x-tree-node-checked")?true:Ext.fly(this.checkbox).hasClass("x-tree-node-grayed")?this.grayedValue:false):false;}});Ext.override(Ext.tree.TreeEventModel,{initEvents:function(){var A=this.tree.getTreeEl();A.on("click",this.delegateClick,this);if(this.tree.trackMouseOver!==false){A.on("mouseover",this.delegateOver,this);A.on("mouseout",this.delegateOut,this);}A.on("mousedown",this.delegateDown,this);A.on("mouseup",this.delegateUp,this);A.on("dblclick",this.delegateDblClick,this);A.on("contextmenu",this.delegateContextMenu,this);},delegateOver:function(B,A){if(!this.beforeEvent(B)){return ;}if(this.lastEcOver){this.onIconOut(B,this.lastEcOver);delete this.lastEcOver;}if(this.lastCbOver){this.onCheckboxOut(B,this.lastCbOver);delete this.lastCbOver;}if(B.getTarget(".x-tree-ec-icon",1)){this.lastEcOver=this.getNode(B);this.onIconOver(B,this.lastEcOver);}else{if(B.getTarget(".x-tree-checkbox",1)){this.lastCbOver=this.getNode(B);this.onCheckboxOver(B,this.lastCbOver);}}A=this.getNodeTarget(B);if(A){this.onNodeOver(B,this.getNode(B));}},delegateOut:function(B,A){if(!this.beforeEvent(B)){return ;}var C;if(B.getTarget(".x-tree-ec-icon",1)){C=this.getNode(B);this.onIconOut(B,C);if(C===this.lastEcOver){delete this.lastEcOver;}}else{if(B.getTarget(".x-tree-checkbox",1)){C=this.getNode(B);this.onCheckboxOut(B,C);if(C===this.lastCbOver){delete this.lastCbOver;}}}A=this.getNodeTarget(B);if(A&&!B.within(A,true)){this.onNodeOut(B,this.getNode(B));}},delegateDown:function(B,A){if(!this.beforeEvent(B)){return ;}if(B.getTarget(".x-tree-checkbox",1)){this.onCheckboxDown(B,this.getNode(B));}},delegateUp:function(B,A){if(!this.beforeEvent(B)){return ;}if(B.getTarget(".x-tree-checkbox",1)){this.onCheckboxUp(B,this.getNode(B));}},delegateOut:function(B,A){if(!this.beforeEvent(B)){return ;}var C;if(B.getTarget(".x-tree-ec-icon",1)){C=this.getNode(B);this.onIconOut(B,C);if(C===this.lastEcOver){delete this.lastEcOver;}}else{if(B.getTarget(".x-tree-checkbox",1)){C=this.getNode(B);this.onCheckboxOut(B,C);if(C===this.lastCbOver){delete this.lastCbOver;}}}if((A=this.getNodeTarget(B))&&!B.within(A,true)){this.onNodeOut(B,this.getNode(B));}},delegateClick:function(B,A){if(!this.beforeEvent(B)){return ;}if(B.getTarget(".x-tree-checkbox",1)){this.onCheckboxClick(B,this.getNode(B));}else{if(B.getTarget(".x-tree-ec-icon",1)){this.onIconClick(B,this.getNode(B));}else{if(this.getNodeTarget(B)){this.onNodeClick(B,this.getNode(B));}}}},onCheckboxClick:function(B,A){A.ui.onCheckboxClick();},onCheckboxOver:function(B,A){A.ui.onCheckboxOver();},onCheckboxOut:function(B,A){A.ui.onCheckboxOut();},onCheckboxDown:function(B,A){A.ui.onCheckboxDown();},onCheckboxUp:function(B,A){A.ui.onCheckboxUp();}});