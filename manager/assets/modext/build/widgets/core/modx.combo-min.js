Ext.namespace("MODx.combo");Ext.override(Ext.form.ComboBox,{loaded:false,setValue:Ext.form.ComboBox.prototype.setValue.createSequence(function(B){var A=this.store.find(this.valueField,B);if(B&&B!==0&&this.mode=="remote"&&A==-1&&!this.loaded){var C={};C[this.valueField]=B;this.loaded=true;this.store.load({scope:this,params:C,callback:function(){this.setValue(B);this.collapse();}});}})});MODx.combo.ComboBox=function(A,B){A=A||{};Ext.applyIf(A,{displayField:"name",valueField:"id",triggerAction:"all",fields:["id","name"],baseParams:{action:"getList"},width:150,listWidth:300,editable:false,resizable:true,typeAhead:false,forceSelection:true,minChars:3,cls:"modx-combo"});Ext.applyIf(A,{store:new Ext.data.JsonStore({url:A.connector||A.url,root:"results",totalProperty:"total",fields:A.fields,errorReader:MODx.util.JSONReader,baseParams:A.baseParams||{},remoteSort:A.remoteSort||false,autoDestroy:true})});if(B===true){A.store.load();return A.store;}MODx.combo.ComboBox.superclass.constructor.call(this,A);this.config=A;return this;};Ext.extend(MODx.combo.ComboBox,Ext.form.ComboBox);Ext.reg("modx-combo",MODx.combo.ComboBox);MODx.combo.Renderer=function(B){var A=false;return(function(D){var C,F;if(!B.store){return D;}if(!A){if(B.store.proxy!==undefined&&B.store.proxy!==null){B.store.load();}A=true;}var E=B.getValue();C=B.store.find(B.valueField,E?E:D);F=B.store.getAt(C);return(F===undefined||F===null?(E?E:D):F.get(B.displayField));});};MODx.combo.Boolean=function(A){A=A||{};Ext.applyIf(A,{store:new Ext.data.SimpleStore({fields:["d","v"],data:[[_("yes"),true],[_("no"),false]]}),displayField:"d",valueField:"v",mode:"local",triggerAction:"all",editable:false,selectOnFocus:false,preventRender:true,forceSelection:true,enableKeyEvents:true});MODx.combo.Boolean.superclass.constructor.call(this,A);};Ext.extend(MODx.combo.Boolean,MODx.combo.ComboBox);Ext.reg("combo-boolean",MODx.combo.Boolean);Ext.reg("modx-combo-boolean",MODx.combo.Boolean);MODx.util.PasswordField=function(A){A=A||{};delete A.xtype;Ext.applyIf(A,{xtype:"textfield",inputType:"password"});MODx.util.PasswordField.superclass.constructor.call(this,A);};Ext.extend(MODx.util.PasswordField,Ext.form.TextField);Ext.reg("text-password",MODx.util.PasswordField);Ext.reg("modx-text-password",MODx.util.PasswordField);MODx.combo.User=function(A){A=A||{};Ext.applyIf(A,{name:"user",hiddenName:"user",displayField:"username",valueField:"id",fields:["username","id"],pageSize:20,url:MODx.config.connectors_url+"security/user.php"});MODx.combo.User.superclass.constructor.call(this,A);};Ext.extend(MODx.combo.User,MODx.combo.ComboBox);Ext.reg("modx-combo-user",MODx.combo.User);MODx.combo.UserGroup=function(A){A=A||{};Ext.applyIf(A,{name:"group",hiddenName:"group",displayField:"name",valueField:"id",fields:["name","id","description"],listWidth:300,pageSize:20,url:MODx.config.connectors_url+"security/group.php",tpl:new Ext.XTemplate('<tpl for="."><div class="x-combo-list-item"><span style="font-weight: bold">{name}</span>',"<br />{description}</div></tpl>")});MODx.combo.UserGroup.superclass.constructor.call(this,A);};Ext.extend(MODx.combo.UserGroup,MODx.combo.ComboBox);Ext.reg("modx-combo-usergroup",MODx.combo.UserGroup);MODx.combo.UserGroupRole=function(A){A=A||{};Ext.applyIf(A,{name:"role",hiddenName:"role",displayField:"name",valueField:"id",fields:["name","id"],pageSize:20,url:MODx.config.connectors_url+"security/role.php"});MODx.combo.UserGroupRole.superclass.constructor.call(this,A);};Ext.extend(MODx.combo.UserGroupRole,MODx.combo.ComboBox);Ext.reg("modx-combo-usergrouprole",MODx.combo.UserGroupRole);MODx.combo.ResourceGroup=function(A){A=A||{};Ext.applyIf(A,{name:"resourcegroup",hiddenName:"resourcegroup",displayField:"name",valueField:"id",fields:["name","id"],pageSize:20,url:MODx.config.connectors_url+"security/resourcegroup.php"});MODx.combo.ResourceGroup.superclass.constructor.call(this,A);};Ext.extend(MODx.combo.ResourceGroup,MODx.combo.ComboBox);Ext.reg("modx-combo-resourcegroup",MODx.combo.ResourceGroup);MODx.combo.Context=function(A){A=A||{};Ext.applyIf(A,{name:"context",hiddenName:"context",displayField:"key",valueField:"key",fields:["key"],pageSize:20,url:MODx.config.connectors_url+"context/index.php"});MODx.combo.Context.superclass.constructor.call(this,A);};Ext.extend(MODx.combo.Context,MODx.combo.ComboBox);Ext.reg("modx-combo-context",MODx.combo.Context);MODx.combo.Policy=function(A){A=A||{};Ext.applyIf(A,{name:"policy",hiddenName:"policy",displayField:"name",valueField:"id",fields:["name","id"],allowBlank:false,editable:false,pageSize:20,url:MODx.config.connectors_url+"security/access/policy.php"});MODx.combo.Policy.superclass.constructor.call(this,A);};Ext.extend(MODx.combo.Policy,MODx.combo.ComboBox);Ext.reg("modx-combo-policy",MODx.combo.Policy);MODx.combo.Template=function(A){A=A||{};Ext.applyIf(A,{name:"template",hiddenName:"template",displayField:"templatename",valueField:"id",pageSize:20,fields:["id","templatename","description","category_name"],tpl:new Ext.XTemplate('<tpl for="."><div class="x-combo-list-item"><span style="font-weight: bold">{templatename}</span>','<tpl if="category_name"> - <span style="font-style:italic">{category_name}</span></tpl>',"<br />{description}</div></tpl>"),url:MODx.config.connectors_url+"element/template.php",listWidth:350,allowBlank:true});MODx.combo.Template.superclass.constructor.call(this,A);};Ext.extend(MODx.combo.Template,MODx.combo.ComboBox);Ext.reg("modx-combo-template",MODx.combo.Template);MODx.combo.Category=function(A){A=A||{};Ext.applyIf(A,{name:"category",hiddenName:"category",displayField:"name",valueField:"id",mode:"remote",fields:["id","category","parent","name"],forceSelection:true,typeAhead:false,allowBlank:true,editable:false,enableKeyEvents:true,url:MODx.config.connectors_url+"element/category.php",baseParams:{action:"getList",showNone:true}});MODx.combo.Category.superclass.constructor.call(this,A);};Ext.extend(MODx.combo.Category,MODx.combo.ComboBox,{_onblur:function(B,C){var A=this.getRawValue();this.setRawValue(A);this.setValue(A,true);}});Ext.reg("modx-combo-category",MODx.combo.Category);MODx.combo.Language=function(A){A=A||{};Ext.applyIf(A,{name:"language",hiddenName:"language",displayField:"name",valueField:"name",fields:["name"],forceSelection:true,typeAhead:false,editable:false,allowBlank:false,pageSize:20,url:MODx.config.connectors_url+"system/language.php"});MODx.combo.Language.superclass.constructor.call(this,A);};Ext.extend(MODx.combo.Language,MODx.combo.ComboBox);Ext.reg("modx-combo-language",MODx.combo.Language);MODx.combo.Charset=function(A){A=A||{};Ext.applyIf(A,{name:"charset",hiddenName:"charset",displayField:"text",valueField:"value",fields:["value","text"],forceSelection:true,typeAhead:false,editable:false,allowBlank:false,listWidth:300,url:MODx.config.connectors_url+"system/charset.php"});MODx.combo.Charset.superclass.constructor.call(this,A);};Ext.extend(MODx.combo.Charset,MODx.combo.ComboBox);Ext.reg("modx-combo-charset",MODx.combo.Charset);MODx.combo.RTE=function(A){A=A||{};Ext.applyIf(A,{name:"rte",hiddenName:"rte",displayField:"value",valueField:"value",fields:["value"],forceSelection:true,typeAhead:false,editable:false,allowBlank:false,listWidth:300,url:MODx.config.connectors_url+"system/rte.php"});MODx.combo.RTE.superclass.constructor.call(this,A);};Ext.extend(MODx.combo.RTE,MODx.combo.ComboBox);Ext.reg("modx-combo-rte",MODx.combo.RTE);MODx.combo.Role=function(A){A=A||{};Ext.applyIf(A,{name:"role",hiddenName:"role",forceSelection:true,typeAhead:false,editable:false,allowBlank:false,listWidth:300,pageSize:20,url:MODx.config.connectors_url+"security/role.php",baseParams:{action:"getList",addNone:true}});MODx.combo.Role.superclass.constructor.call(this,A);};Ext.extend(MODx.combo.Role,MODx.combo.ComboBox);Ext.reg("modx-combo-role",MODx.combo.Role);MODx.combo.ContentType=function(A){A=A||{};Ext.applyIf(A,{name:"content_type",hiddenName:"content_type",forceSelection:true,typeAhead:false,editable:false,allowBlank:false,listWidth:300,pageSize:20,url:MODx.config.connectors_url+"system/contenttype.php",baseParams:{action:"getList"}});MODx.combo.ContentType.superclass.constructor.call(this,A);};Ext.extend(MODx.combo.ContentType,MODx.combo.ComboBox);Ext.reg("modx-combo-content-type",MODx.combo.ContentType);MODx.combo.ContentDisposition=function(A){A=A||{};Ext.applyIf(A,{store:new Ext.data.SimpleStore({fields:["d","v"],data:[[_("inline"),0],[_("attachment"),1]]}),name:"content_dispo",hiddenName:"content_dispo",width:200,displayField:"d",valueField:"v",mode:"local",triggerAction:"all",editable:false,pageSize:20,selectOnFocus:false,preventRender:true});MODx.combo.ContentDisposition.superclass.constructor.call(this,A);};Ext.extend(MODx.combo.ContentDisposition,Ext.form.ComboBox);Ext.reg("modx-combo-content-disposition",MODx.combo.ContentDisposition);MODx.combo.ClassMap=function(A){A=A||{};Ext.applyIf(A,{name:"class",hiddenName:"class",url:MODx.config.connectors_url+"system/classmap.php",displayField:"class",valueField:"class",fields:["class"],editable:false});MODx.combo.ClassMap.superclass.constructor.call(this,A);};Ext.extend(MODx.combo.ClassMap,MODx.combo.ComboBox);Ext.reg("modx-combo-class-map",MODx.combo.ClassMap);MODx.combo.Object=function(A){A=A||{};Ext.applyIf(A,{name:"object",hiddenName:"object",url:MODx.config.connectors_url+"workspace/builder/index.php",baseParams:{action:"getAssocObject",class_key:"modResource"},displayField:"name",valueField:"id",fields:["id","name"],pageSize:10,editable:false});MODx.combo.Object.superclass.constructor.call(this,A);};Ext.extend(MODx.combo.Object,MODx.combo.ComboBox);Ext.reg("modx-combo-object",MODx.combo.Object);MODx.combo.Namespace=function(A){A=A||{};Ext.applyIf(A,{name:"namespace",hiddenName:"namespace",forceSelection:true,typeAhead:false,editable:false,allowBlank:false,listWidth:300,pageSize:20,url:MODx.config.connectors_url+"workspace/namespace.php",fields:["name"],displayField:"name",valueField:"name"});MODx.combo.Namespace.superclass.constructor.call(this,A);};Ext.extend(MODx.combo.Namespace,MODx.combo.ComboBox);Ext.reg("modx-combo-namespace",MODx.combo.Namespace);MODx.combo.Browser=function(A){A=A||{};Ext.applyIf(A,{width:300,triggerAction:"all"});MODx.combo.Browser.superclass.constructor.call(this,A);this.config=A;};Ext.extend(MODx.combo.Browser,Ext.form.TriggerField,{browser:null,onTriggerClick:function(A){if(this.disabled){return false;}if(this.browser===null){this.browser=MODx.load({xtype:"modx-browser",id:Ext.id(),multiple:true,prependPath:this.config.prependPath||null,prependUrl:this.config.prependUrl||null,basePath:this.config.basePath||"",basePathRelative:this.config.basePathRelative||null,baseUrl:this.config.baseUrl||"",baseUrlRelative:this.config.baseUrlRelative||null,hideFiles:this.config.hideFiles||false,rootVisible:this.config.rootVisible||false,allowedFileTypes:this.config.allowedFileTypes||"",wctx:this.config.wctx||"web",openTo:this.config.openTo||"",listeners:{select:{fn:function(B){this.setValue(B.relativeUrl);this.fireEvent("select",B);},scope:this}}});}this.browser.show(A);return true;},onDestroy:function(){MODx.combo.Browser.superclass.onDestroy.call(this);}});Ext.reg("modx-combo-browser",MODx.combo.Browser);MODx.combo.Country=function(A){A=A||{};Ext.applyIf(A,{name:"country",hiddenName:"country",url:MODx.config.connectors_url+"system/country.php",displayField:"value",valueField:"value",fields:["value"],editable:false,value:0});MODx.combo.Country.superclass.constructor.call(this,A);};Ext.extend(MODx.combo.Country,MODx.combo.ComboBox);Ext.reg("modx-combo-country",MODx.combo.Country);MODx.combo.PropertySet=function(A){A=A||{};Ext.applyIf(A,{name:"propertyset",hiddenName:"propertyset",url:MODx.config.connectors_url+"element/propertyset.php",displayField:"name",valueField:"id",fields:["id","name"],editable:false,value:0});MODx.combo.PropertySet.superclass.constructor.call(this,A);};Ext.extend(MODx.combo.PropertySet,MODx.combo.ComboBox);Ext.reg("modx-combo-property-set",MODx.combo.PropertySet);MODx.ChangeParentField=function(A){A=A||{};Ext.applyIf(A,{triggerAction:"all",editable:false,readOnly:false,formpanel:"modx-panel-resource"});MODx.ChangeParentField.superclass.constructor.call(this,A);this.config=A;this.on("click",this.onTriggerClick,this);this.addEvents({end:true});this.on("end",this.end,this);};Ext.extend(MODx.ChangeParentField,Ext.form.TriggerField,{oldValue:false,oldDisplayValue:false,end:function(B){var A=Ext.getCmp("modx-resource-tree");if(!A){return ;}B.d=B.d||B.v;A.removeListener("click",this.handleChangeParent,this);A.on("click",A._handleClick,A);A.disableHref=false;MODx.debug("Setting parent to: "+B.v);Ext.getCmp("modx-resource-parent-hidden").setValue(B.v);this.setValue(B.d);this.oldValue=false;Ext.getCmp(this.config.formpanel).fireEvent("fieldChange");},onTriggerClick:function(){if(this.disabled){return false;}if(this.oldValue){this.fireEvent("end",{v:this.oldValue,d:this.oldDisplayValue});return false;}MODx.debug("onTriggerClick");var A=Ext.getCmp("modx-resource-tree");if(!A){MODx.debug("no tree found, trying to activate");var B=Ext.getCmp("modx-leftbar-tabpanel");if(B){B.on("tabchange",function(C,D){if(D.id=="modx-resource-tree-ct"){this.disableTreeClick();}},this);B.activate("modx-resource-tree-ct");}else{MODx.debug("no tabpanel");}return false;}this.disableTreeClick();},disableTreeClick:function(){MODx.debug("Disabling tree click");t=Ext.getCmp("modx-resource-tree");if(!t){MODx.debug("No tree found in disableTreeClick!");return false;}this.oldDisplayValue=this.getValue();this.oldValue=Ext.getCmp("modx-resource-parent-hidden").getValue();this.setValue(_("resource_parent_select_node"));t.expand();t.removeListener("click",t._handleClick);t.on("click",this.handleChangeParent,this);t.disableHref=true;return true;},handleChangeParent:function(C,D){var B=Ext.getCmp("modx-resource-tree");if(!B){return false;}B.disableHref=true;var F=C.id.split("_");F=F[1];if(F==MODx.request.id){MODx.msg.alert("",_("resource_err_own_parent"));return false;}var A=Ext.getCmp("modx-resource-context-key");if(A){var E=A.getValue();if(C.attributes&&C.attributes.ctx!=E){A.setValue(C.attributes.ctx);}}this.fireEvent("end",{v:C.attributes.type!="modContext"?F:C.attributes.pk,d:Ext.util.Format.stripTags(C.text)});D.preventDefault();D.stopEvent();return true;}});Ext.reg("modx-field-parent-change",MODx.ChangeParentField);MODx.combo.TVWidget=function(A){A=A||{};Ext.applyIf(A,{name:"widget",hiddenName:"widget",displayField:"name",valueField:"value",fields:["value","name"],editable:false,url:MODx.config.connectors_url+"element/tv/renders.php",baseParams:{action:"getOutputs"},value:"default"});MODx.combo.TVWidget.superclass.constructor.call(this,A);};Ext.extend(MODx.combo.TVWidget,MODx.combo.ComboBox);Ext.reg("modx-combo-tv-widget",MODx.combo.TVWidget);MODx.combo.TVInputType=function(A){A=A||{};Ext.applyIf(A,{name:"type",hiddenName:"type",displayField:"name",valueField:"value",editable:false,fields:["value","name"],url:MODx.config.connectors_url+"element/tv/renders.php",baseParams:{action:"getInputs"},value:"text"});MODx.combo.TVInputType.superclass.constructor.call(this,A);};Ext.extend(MODx.combo.TVInputType,MODx.combo.ComboBox);Ext.reg("modx-combo-tv-input-type",MODx.combo.TVInputType);MODx.combo.Action=function(A){A=A||{};Ext.applyIf(A,{name:"action",hiddenName:"action",displayField:"controller",valueField:"id",fields:["id","controller"],url:MODx.config.connectors_url+"system/action.php"});MODx.combo.Action.superclass.constructor.call(this,A);};Ext.extend(MODx.combo.Action,MODx.combo.ComboBox);Ext.reg("modx-combo-action",MODx.combo.Action);