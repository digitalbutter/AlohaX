MODx.panel.ElementProperties=function(A){A=A||{};Ext.applyIf(A,{id:"modx-panel-element-properties",title:_("properties"),header:false,bodyStyle:"padding: 15px;",defaults:{collapsible:false,autoHeight:true,border:false},items:[{html:"<p>"+_("element_properties_desc")+"</p>",itemId:"desc-properties"},{xtype:"modx-grid-element-properties",id:"modx-grid-element-properties",itemId:"grid-properties",autoHeight:true,border:true,panel:A.elementPanel,elementId:A.elementId,elementType:A.elementType}]});MODx.panel.ElementProperties.superclass.constructor.call(this,A);};Ext.extend(MODx.panel.ElementProperties,MODx.Panel);Ext.reg("modx-panel-element-properties",MODx.panel.ElementProperties);MODx.grid.ElementProperties=function(A){A=A||{};this.exp=new Ext.grid.RowExpander({tpl:new Ext.Template('<p class="modx-property-description"><i>{desc_trans}</i></p>')});Ext.applyIf(A,{title:_("properties"),id:"modx-grid-element-properties",maxHeight:300,fields:["name","desc","xtype","options","value","lexicon","overridden","desc_trans"],autoExpandColumn:"value",sortBy:"name",width:"100%",sm:new Ext.grid.RowSelectionModel({singleSelect:false}),loadMask:true,lockProperties:true,plugins:[this.exp],columns:[this.exp,{header:_("name"),dataIndex:"name",width:200,sortable:true,renderer:this._renderName},{header:_("type"),dataIndex:"xtype",width:100,renderer:this._renderType,sortable:true},{header:_("value"),dataIndex:"value",id:"value",width:250,renderer:this.renderDynField.createDelegate(this,[this],true),sortable:true}],tbar:[{xtype:"modx-combo-property-set",id:"modx-combo-property-set",baseParams:{action:"getList",showAssociated:true,elementId:A.elementId,elementType:A.elementType},value:_("default"),listeners:{select:{fn:this.changePropertySet,scope:this}}},{text:_("property_create"),id:"modx-btn-property-create",handler:this.create,scope:this,disabled:true},"-",{text:_("property_revert_all"),id:"modx-btn-property-revert-all",handler:this.revertAll,scope:this,disabled:true},"-",{text:_("properties_default_locked"),id:"modx-btn-propset-lock",handler:this.togglePropertiesLock,enableToggle:true,pressed:true,disabled:MODx.perm.unlock_element_properties?false:true,scope:this},"->",{text:_("propertyset_add"),handler:this.addPropertySet,scope:this},"-",{text:_("propertyset_save"),handler:this.save,scope:this,hidden:MODx.request.id?false:true}],bbar:[{text:_("properties_import"),handler:this.importProperties,scope:this},"-",{text:_("properties_export"),handler:this.exportProperties,scope:this}],collapseFirst:false,tools:[{id:"plus",qtip:_("expand_all"),handler:this.expandAll,scope:this},{id:"minus",hidden:true,qtip:_("collapse_all"),handler:this.collapseAll,scope:this}]});MODx.grid.ElementProperties.superclass.constructor.call(this,A);this.on("afteredit",this.propertyChanged,this);this.on("afterRemoveRow",this.propertyChanged,this);this.on("celldblclick",this.onDirty,this);this.on("render",function(){this.mask=new Ext.LoadMask(this.getEl(),{msg:_("loading")});},this);if(this.config.lockProperties){this.on("render",function(){this.lockMask=MODx.load({xtype:"modx-lockmask",el:this.getGridEl(),msg:_("properties_default_locked")});this.lockMask.toggle();},this);}};Ext.extend(MODx.grid.ElementProperties,MODx.grid.LocalProperty,{defaultProperties:[],onDirty:function(){if(this.config.panel){Ext.getCmp(this.config.panel).fireEvent("fieldChange");}},_renderType:function(B,C,D,A){switch(B){case"combo-boolean":return _("yesno");break;case"datefield":return _("date");break;case"numberfield":return _("integer");break;}return _(B);},_renderName:function(B,C,D,A){switch(D.data.overridden){case 1:return'<span style="color: green;">'+B+"</span>";break;case 2:return'<span style="color: purple;">'+B+"</span>";default:return"<span>"+B+"</span>";}},save:function(){var D=this.encode();var A=Ext.getCmp("modx-combo-property-set");if(!A){this.getStore().commitChanges();this.onDirty();return true;}var C={action:"updatefromelement",id:A.getValue(),data:D};if(this.config.elementId){Ext.apply(C,{elementId:this.config.elementId,elementType:this.config.elementType});}try{if(!this.mask){this.mask=new Ext.LoadMask(this.getEl(),{msg:_("loading")});}if(this.mask){this.mask.show();}}catch(B){}MODx.Ajax.request({url:MODx.config.connectors_url+"element/propertyset.php",params:C,listeners:{success:{fn:function(E){this.getStore().commitChanges();this.changePropertySet(A);this.onDirty();if(this.mask){this.mask.hide();}MODx.msg.status({title:_("success"),message:_("save_successful"),dontHide:E.message!=""?true:false});},scope:this}}});},addPropertySet:function(A,B){this.loadWindow(A,B,{xtype:"modx-window-element-property-set-add",record:{elementId:this.config.elementId!=0?this.config.elementId:"",elementType:this.config.elementType},listeners:{success:{fn:function(D){var C=Ext.getCmp("modx-combo-property-set");C.store.reload({callback:function(){C.setValue(D.a.result.object.id);this.changePropertySet(C);},scope:this});this.onDirty();},scope:this}}});},togglePropertiesLock:function(){var A=Ext.getCmp("modx-combo-property-set").getValue();if(A==0||A==_("default")){Ext.getCmp("modx-btn-propset-lock").setText(this.lockMask.locked?_("properties_default_unlocked"):_("properties_default_locked"));this.lockMask.toggle();this.toggleButtons(this.lockMask.locked);}},toggleButtons:function(A){var B=Ext.getCmp("modx-btn-property-create");if(B){Ext.getCmp("modx-btn-property-create").setDisabled(A);Ext.getCmp("modx-btn-property-revert-all").setDisabled(A);}},changePropertySet:function(A){var C=A.getValue();var B=Ext.getCmp("modx-btn-propset-lock");if(C==0||C==_("default")){if(MODx.perm.unlock_element_properties){if(B){B.setDisabled(false);}}if(this.lockMask&&this.lockMask.locked){this.lockMask.show();this.toggleButtons(true);}}else{if(B){B.setDisabled(true);}if(this.lockMask){this.lockMask.hide();}this.toggleButtons(false);}MODx.Ajax.request({url:MODx.config.connectors_url+"element/propertyset.php",params:{action:"get",id:C,elementId:this.config.elementId,elementType:this.config.elementType},listeners:{success:{fn:function(E){var D=this.getStore();var F=Ext.decode(E.object.data);D.removeAll();D.loadData(F);},scope:this}}});},create:function(A,B){this.loadWindow(A,B,{xtype:"modx-window-element-property-create",blankValues:true,listeners:{success:{fn:function(C){var D=new this.propRecord({name:C.name,desc:C.desc,xtype:C.xtype,options:C.options,value:C.value,lexicon:C.lexicon,overridden:this.isDefaultPropSet()?0:2});this.getStore().add(D);this.propertyChanged();this.onDirty();},scope:this}}});},update:function(A,B){this.loadWindow(A,B,{xtype:"modx-window-element-property-update",record:this.menu.record,listeners:{success:{fn:function(D){var E=this.isDefaultPropSet();var C=this.getStore();var F=C.getAt(this.menu.recordIndex);F.set("name",D.name);F.set("desc",D.desc);F.set("xtype",D.xtype);F.set("options",D.options);F.set("value",D.value);F.set("lexicon",D.lexicon);F.set("overridden",D.overridden==2?2:(!E?1:0));this.getView().refresh();this.onDirty();},scope:this}}});},revert:function(A,B){Ext.Msg.confirm(_("warning"),_("property_revert_confirm"),function(D){if(D=="yes"){var C=this.menu.recordIndex;var F=this.defaultProperties[C];var E=this.getStore().getAt(C);E.set("name",F[0]);E.set("desc",F[1]);E.set("xtype",F[2]);E.set("options",F[3]);E.set("value",F[4]);E.set("overridden",0);E.commit();}},this);},revertAll:function(A,B){Ext.Msg.confirm(_("warning"),_("property_revert_all_confirm"),function(C){if(C=="yes"){this.getStore().loadData(this.defaultProperties);}},this);},removeMultiple:function(C,E){var D=this.getSelectionModel().getSelections();var B=[];for(var A=0;A<D.length;A=A+1){B.push(D[A].data.id);}Ext.Msg.confirm(_("warning"),_("properties_remove_confirm"),function(G){if(G=="yes"){for(var F=0;F<D.length;F=F+1){this.store.remove(D[F]);}}},this);},exportProperties:function(A,B){var C=Ext.getCmp("modx-combo-property-set").getValue();MODx.Ajax.request({url:MODx.config.connectors_url+"element/index.php",params:{action:"exportProperties",data:this.encode(),id:C},listeners:{success:{fn:function(D){location.href=MODx.config.connectors_url+"element/index.php?action=exportProperties&download="+D.message+"&id="+C+"&HTTP_MODAUTH="+MODx.siteId;},scope:this}}});},importProperties:function(A,B){this.loadWindow(A,B,{xtype:"modx-window-properties-import",record:this.menu.record,listeners:{success:{fn:function(G){var D=this.getStore();var F=G.a.result.object;for(var C in F){if(F[C][4]){F[C][4]=F[C][4].replace(/&gt;/g,">").replace(/&lt;/g,"<");}if(F[C][1]){F[C][1]=F[C][1].replace(/&gt;/g,">").replace(/&lt;/g,"<");}}D.loadData(F);var E=D.getRange(0,D.getTotalCount());for(var C=0;C<E.length;C++){E[C].markDirty();}this.getView().refresh();},scope:this}}});},_showMenu:function(B,A,C){var D=this.getSelectionModel();if(D.getSelections().length>1){C.stopEvent();C.preventDefault();this.menu.removeAll();this.addContextMenuItem([{text:_("properties_remove"),handler:this.removeMultiple,scope:this}]);this.menu.show(C.target);}else{MODx.grid.ElementProperties.superclass._showMenu.call(this,B,A,C);}},isDefaultPropSet:function(){var A=Ext.getCmp("modx-combo-property-set").getValue();return(A==0||A==_("default"));},getMenu:function(){var C=this.isDefaultPropSet();var B=this.menu.record;var A=[];A.push({text:_("property_update"),scope:this,handler:this.update});if(B.overridden){A.push({text:_("property_revert"),scope:this,handler:this.revert});}if(B.overridden==2&&!C){A.push({text:_("property_remove"),scope:this,handler:this.remove.createDelegate(this,[{title:_("warning"),text:_("property_remove_confirm")}])});}if(B.overridden!=1&&C){A.push({text:_("property_remove"),scope:this,handler:this.remove.createDelegate(this,[{title:_("warning"),text:_("property_remove_confirm")}])});}return A;},propertyChanged:function(){var A=Ext.getCmp(this.config.panel);if(!A){return false;}var B=this.config.hiddenPropField||"props";A.getForm().findField(B).setValue("1");A.fireEvent("fieldChange",{field:B,form:A.getForm()});return true;}});Ext.reg("modx-grid-element-properties",MODx.grid.ElementProperties);MODx.grid.ElementPropertyOption=function(A){A=A||{};Ext.applyIf(A,{title:_("property_options"),id:"modx-grid-element-property-options",autoHeight:true,maxHeight:300,width:"100%",fields:["text","value","name"],data:[],columns:[{header:_("name"),dataIndex:"text",width:150,editor:{xtype:"textfield",allowBlank:false}},{header:_("value"),dataIndex:"value",id:"value",width:250,editor:{xtype:"textfield",allowBlank:true}}],tbar:[{text:_("property_option_create"),handler:this.create,scope:this}]});MODx.grid.ElementPropertyOption.superclass.constructor.call(this,A);this.optRecord=Ext.data.Record.create([{name:"text"},{name:"value"}]);};Ext.extend(MODx.grid.ElementPropertyOption,MODx.grid.LocalGrid,{create:function(A,B){this.loadWindow(A,B,{xtype:"modx-window-element-property-option-create",listeners:{success:{fn:function(C){var D=new this.optRecord({text:C.text,value:C.value});this.getStore().add(D);},scope:this}}});},getMenu:function(){return[{text:_("property_option_remove"),scope:this,handler:this.remove.createDelegate(this,[{title:_("warning"),text:_("property_option_remove_confirm")}])}];}});Ext.reg("modx-grid-element-property-options",MODx.grid.ElementPropertyOption);MODx.window.CreateElementProperty=function(A){A=A||{};Ext.applyIf(A,{title:_("property_create"),id:"modx-window-element-property-create",height:250,width:450,saveBtnText:_("done"),fields:[{fieldLabel:_("name"),name:"name",id:"modx-cep-name",xtype:"textfield",width:200,allowBlank:false},{fieldLabel:_("description"),name:"desc",id:"modx-cep-desc",xtype:"textarea",width:200},{fieldLabel:_("type"),name:"xtype",id:"modx-cep-xtype",xtype:"modx-combo-xtype",width:200,listeners:{select:{fn:function(B,E,C){var D=Ext.getCmp("modx-cep-grid-element-property-options");if(!D){return ;}if(B.getValue()=="list"){D.show();}else{D.hide();}this.syncSize();},scope:this}}},{xtype:"textfield",fieldLabel:_("lexicon"),name:"lexicon",id:"modx-cep-lexicon",width:200,allowBlank:true},{xtype:"modx-element-value-field",xtypeField:"modx-cep-xtype",id:"modx-cep-value"},{xtype:"modx-grid-element-property-options",id:"modx-cep-grid-element-property-options"}]});MODx.window.CreateElementProperty.superclass.constructor.call(this,A);this.on("show",this.onShow,this);};Ext.extend(MODx.window.CreateElementProperty,MODx.Window,{submit:function(){var v=this.fp.getForm().getValues();var g=Ext.getCmp("modx-cep-grid-element-property-options");var opt=eval(g.encode());Ext.apply(v,{options:opt});if(this.fp.getForm().isValid()){if(this.fireEvent("success",v)){this.fp.getForm().reset();this.hide();return true;}}return false;},onShow:function(){var A=Ext.getCmp("modx-cep-grid-element-property-options");A.getStore().removeAll();A.hide();this.syncSize();this.center();}});Ext.reg("modx-window-element-property-create",MODx.window.CreateElementProperty);MODx.window.UpdateElementProperty=function(A){A=A||{};Ext.applyIf(A,{title:_("property_update"),id:"modx-window-element-property-update",height:250,width:450,saveBtnText:_("done"),forceLayout:true,fields:[{fieldLabel:_("name"),name:"name",id:"modx-uep-name",xtype:"textfield",width:200},{fieldLabel:_("description"),name:"desc",id:"modx-uep-desc",xtype:"textarea",width:200},{fieldLabel:_("type"),name:"xtype",xtype:"modx-combo-xtype",id:"modx-uep-xtype",width:200,listeners:{select:{fn:function(B,F,D){var E=Ext.getCmp("modx-uep-grid-element-property-options");if(!E){return ;}var C=B.getValue();if(C=="list"){E.show();}else{E.hide();}this.syncSize();},scope:this}}},{xtype:"textfield",fieldLabel:_("lexicon"),name:"lexicon",id:"modx-uep-lexicon",width:200,allowBlank:true},{xtype:"hidden",name:"overridden",id:"modx-uep-overridden"},{xtype:"modx-element-value-field",xtypeField:"modx-uep-xtype",name:"value",id:"modx-uep-value"},{id:"modx-uep-grid-element-property-options",xtype:"modx-grid-element-property-options",autoHeight:true}]});MODx.window.UpdateElementProperty.superclass.constructor.call(this,A);this.on("show",this.onShow,this);};Ext.extend(MODx.window.UpdateElementProperty,MODx.Window,{submit:function(){var v=this.fp.getForm().getValues();var g=Ext.getCmp("modx-uep-grid-element-property-options");var opt=eval(g.encode());Ext.apply(v,{options:opt});if(this.fp.getForm().isValid()){if(this.fireEvent("success",v)){this.fp.getForm().reset();this.hide();return true;}}return false;},onShow:function(){var E=Ext.getCmp("modx-uep-grid-element-property-options");if(!E){return ;}if(this.fp.getForm().findField("xtype").getValue()=="list"){E.show();}else{E.hide();}E.getStore().removeAll();var C=Ext.getCmp("modx-grid-element-properties");var F=C.getSelectionModel().getSelected();if(F){var B=F.data.options;var D=[];for(var A in B){if(B.hasOwnProperty(A)){D.push([B[A].text,B[A].value]);}}E.getStore().loadData(D);}this.syncSize();this.center();}});Ext.reg("modx-window-element-property-update",MODx.window.UpdateElementProperty);MODx.window.CreateElementPropertyOption=function(A){A=A||{};Ext.applyIf(A,{title:_("property_option_create"),id:"modx-window-element-property-option-create",height:250,width:450,saveBtnText:_("done"),fields:[{fieldLabel:_("name"),name:"text",id:"modx-cepo-text",xtype:"textfield",width:200},{fieldLabel:_("value"),name:"value",id:"modx-cepo-value",xtype:"textfield",width:200}]});MODx.window.CreateElementPropertyOption.superclass.constructor.call(this,A);};Ext.extend(MODx.window.CreateElementPropertyOption,MODx.Window,{submit:function(){if(this.fp.getForm().isValid()){if(this.fireEvent("success",this.fp.getForm().getValues())){this.fp.getForm().reset();this.hide();return true;}}return false;}});Ext.reg("modx-window-element-property-option-create",MODx.window.CreateElementPropertyOption);MODx.combo.xType=function(A){A=A||{};Ext.applyIf(A,{store:new Ext.data.SimpleStore({fields:["d","v"],data:[[_("textfield"),"textfield"],[_("textarea"),"textarea"],[_("yesno"),"combo-boolean"],[_("date"),"datefield"],[_("list"),"list"],[_("integer"),"numberfield"]]}),displayField:"d",valueField:"v",mode:"local",name:"xtype",hiddenName:"xtype",triggerAction:"all",editable:false,selectOnFocus:false,value:"textfield"});MODx.combo.xType.superclass.constructor.call(this,A);};Ext.extend(MODx.combo.xType,Ext.form.ComboBox);Ext.reg("modx-combo-xtype",MODx.combo.xType);MODx.form.ElementValueField=function(A){A=A||{};Ext.applyIf(A,{fieldLabel:_("value"),name:"value",xtype:"textfield",width:200});MODx.form.ElementValueField.superclass.constructor.call(this,A);this.config=A;this.on("change",this.checkValue,this);};Ext.extend(MODx.form.ElementValueField,Ext.form.TextField,{checkValue:function(E,B,D){var C=Ext.getCmp(this.config.xtypeField).getValue();var A=E.getValue();if(C=="combo-boolean"){A=(A=="1"||A=="true"||A==1||A==true||A==_("yes")||A=="yes")?1:0;E.setValue(A);}}});Ext.reg("modx-element-value-field",MODx.form.ElementValueField);MODx.combo.PropertySet=function(A){A=A||{};Ext.applyIf(A,{name:"propertyset",hiddenName:"propertyset",url:MODx.config.connectors_url+"element/propertyset.php",baseParams:{action:"getList"},displayField:"name",valueField:"id",fields:["id","name","description","properties"],editable:false,value:0,pageSize:10});MODx.combo.PropertySet.superclass.constructor.call(this,A);};Ext.extend(MODx.combo.PropertySet,MODx.combo.ComboBox);Ext.reg("modx-combo-property-set",MODx.combo.PropertySet);MODx.window.AddPropertySet=function(A){A=A||{};Ext.applyIf(A,{title:_("propertyset_add"),id:"modx-window-element-property-set-add",url:MODx.config.connectors_url+"element/propertyset.php",action:"associate",fields:[{xtype:"hidden",name:"elementId",id:"modx-aps-elementId"},{xtype:"hidden",name:"elementType",id:"modx-aps-elementType"},{html:_("propertyset_panel_desc")},MODx.PanelSpacer,{xtype:"modx-combo-property-set",fieldLabel:_("propertyset"),name:"propertyset",id:"modx-aps-propertyset",anchor:"95%",baseParams:{action:"getList",showNotAssociated:true,elementId:A.record.elementId,elementType:A.record.elementType}},{xtype:"hidden",name:"propertyset_new",id:"modx-aps-propertyset-new",value:false},{xtype:"fieldset",title:_("propertyset_create_new"),autoHeight:true,checkboxToggle:true,collapsed:true,forceLayout:true,id:"modx-aps-propertyset-new-fs",listeners:{expand:{fn:function(B){Ext.getCmp("modx-aps-propertyset-new").setValue(true);},scope:this},collapse:{fn:function(B){Ext.getCmp("modx-aps-propertyset-new").setValue(false);},scope:this}},items:[{xtype:"textfield",fieldLabel:_("name"),name:"name",id:"modx-aps-name",anchor:"95%"},{xtype:"textarea",fieldLabel:_("description"),name:"description",id:"modx-aps-description",anchor:"95%",grow:true}]}]});MODx.window.AddPropertySet.superclass.constructor.call(this,A);};Ext.extend(MODx.window.AddPropertySet,MODx.Window);Ext.reg("modx-window-element-property-set-add",MODx.window.AddPropertySet);MODx.window.ImportProperties=function(A){A=A||{};Ext.applyIf(A,{title:_("properties_import"),id:"modx-window-properties-import",url:MODx.config.connectors_url+"element/index.php",action:"importProperties",fileUpload:true,saveBtnText:_("import"),fields:[{html:_("properties_import_msg"),id:"modx-impp-desc",border:false,bodyStyle:"margin: 10px;"},{xtype:"textfield",fieldLabel:_("file"),name:"file",id:"modx-impp-file",anchor:"95%",inputType:"file"}]});MODx.window.ImportProperties.superclass.constructor.call(this,A);};Ext.extend(MODx.window.ImportProperties,MODx.Window);Ext.reg("modx-window-properties-import",MODx.window.ImportProperties);